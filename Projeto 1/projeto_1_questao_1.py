# -*- coding: utf-8 -*-
"""Projeto 1 Questao 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wDYmkd9zHrw6617mdmcP-vd8nODl6Wif

Bibliotecas e propriedades
"""

from random import seed
from random import randint
from random import SystemRandom
import numpy as np
import matplotlib.pyplot as plt

seed(1)

"""Algoritmo Y"""

# Criando a função que descreve a variavel Y
def Y():
  #Array que armazena os passos, utilidade na plotagem de dados
  Passos=[]
  #Dado que a particula esta inicialmente no vertice 0
  passo=0
  i=0
  Posicao = [False,False,False,False,False,False,False,False,False,False,False,False]
  # Variavel condição que vai validar se o vertice foi visitado
  condicao = all(Posicao) 
  # Loop que termina quando a condicao se faz verdadeira
  while (condicao==False):
  #Decide a direcao no inicio do Loop
    dir = SystemRandom().randint(0, 1)
  #Loop para posicao zero, caso voltar ir para posicao 11
    if i==0:
      if dir==0:
        i=11
      else:
        i+=1
      Posicao[i]=True   
  #Loop para posicao 11, caso voltar ir para posicao 0
    elif i==11:
      if dir==1:
        i=0
      else:
        i+=-1
      Posicao[i]=True
  #Loop para qualquer posicao, pode ir e voltar livremente
    else:  
      if dir==1:
        i+=1
      else:
        i+=-1
      Posicao[i]=True
  #Append no Array de passos
    passo+=1
    Passos.append(passo)
  #Teste se todas as posicoes foram visitadas
    condicao = all(Posicao)
  #Retorna o numero de passos que levaram para conclusão
  return (len(Passos))

Y()

"""Algoritmo Ey

"""

# Criando a função Ey, que vai armazenar o valor esperado de Y em N interações
def Ey(N):
  #Array que funciona com o espaço amostral de Y
  OmegaY=[]
  #Loop que executa a função Y N vezes
  for n in range(N+1):
    # Cade iteração o valor esta sendo armazenado
    OmegaY.append(Y())
  return sum(OmegaY) / N

Ey(10000)

